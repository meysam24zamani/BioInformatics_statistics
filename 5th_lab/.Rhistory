setwd("D:/Spain-Barcelona/UPC/4th Semester/BSG/Statistic-part/5th_lab")
library(data.table)
data <- fread(file="Chr21.dat")
data <- fread(file="Chr21.dat")
data$SEX <- NULL
data$SEX <- NULL
data$PHENOTYPE <- NULL
nrows <- nrow(data)
ncols <- ncol(data)
sum(is.na(data))/(nrows*ncols)*100
nrows
ncols
manhattanDist <- as.matrix(dist(data[,5:ncols]))
manhattanDist[1:5,1:5]
muliDimScaling <- cmdscale(manhattanDist,k=nrows-1,eig=TRUE)
X <- muliDimScaling$points
plot(X[,2],X[,1], xlab="First principal axis", ylab="Second principal axis", main="Map of the individuals",asp=1)
positives <- sum(X[,1]>0)
negatives <- sum(X[,1]<0)
positives
negatives
eigenValues <- muliDimScaling$eig
head(eigenValues,10)
approx2d <- cmdscale(manhattanDist,k=2,eig=TRUE)
goodnessOfFit <- approx2d$GOF
goodnessOfFit
Observed <- manhattanDist[lower.tri(manhattanDist)]
X <- approx2d$points
XDist <- as.matrix(dist(X))
Fitted <- XDist[lower.tri(XDist)]
plot(Observed,Fitted,main="Estimation of distances",xlab="Observed",ylab="Fitted")
coefOfDetermination <- cor(Observed,Fitted)
coefOfDetermination
library(MASS)
set.seed(12345)
init <- scale(matrix(runif(2*nrows),ncol=2),scale=FALSE)
sample <- isoMDS(manhattanDist,init,trace=FALSE)
plot(sample$points[,2],sample$points[,1], xlab="First principal axis", ylab="Second principal axis", main="Random initial configuration",asp=1)
sample <- isoMDS(manhattanDist,trace=FALSE)
plot(sample$points[,2],sample$points[,1], xlab="First principal axis", ylab="Second principal axis", main="Classical metric",asp=1)
set.seed(123)
best_run <- function(M) {
initConf <- scale(matrix(runif(2*nrows),ncol=2),scale=FALSE)
nmdsOut <- isoMDS(M,init,k=2,trace=FALSE)
bestNmdsOut <- nmdsOut
for (i in 2:100) {
initConf <- scale(matrix(runif(2*nrows),ncol=2),scale=FALSE)
nmdsOut <- isoMDS(M,init,k=2,trace=FALSE)
if (nmdsOut$stress < bestNmdsOut$stress) {
bestNmdsOut <- nmdsOut
}
}
return(nmdsOut)
}
bestNmdsOut <- best_run(manhattanDist)
bestNmdsOut$stress
XBestPoints <- bestNmdsOut$points
plot(XBestPoints[,2],XBestPoints[,1], xlab="First principal axis", ylab="Second principal axis", main="Random initial configuration",asp=1)
classicalMetric <- isoMDS(manhattanDist,k=2,trace=FALSE)
ClassicalMetricPoints <- classicalMetric$points
ClassicalMetricDist <- as.matrix(dist(ClassicalMetricPoints))
ClassicalMetricObserved <- ClassicalMetricDist[lower.tri(ClassicalMetricDist)]
XBestDist <- as.matrix(dist(XBestPoints))
XBestFitted <- XBestDist[lower.tri(XBestDist)]
plot(ClassicalMetricObserved,XBestFitted,main="Estimation of distances",xlab="Observed",ylab="Fitted")
coefOfDet <- cor(ClassicalMetricObserved,XBestFitted)
coefOfDet
dim_necessary <- function(M) {
nmdsOut <- isoMDS(M,k=1,trace=FALSE)
dimension <- 1
stresses <- vector(length=nrows)
stresses[1] = nmdsOut$stress
dimensions <- vector(length=nrows)
dimensions[1] = 1
for (i in 2:ncols-1) {
initConf <- scale(matrix(runif(2*nrows),ncol=2),scale=FALSE)
nmdsOut <- isoMDS(M,k=i,trace=FALSE)
if (nmdsOut$stress < 5 & dimension == 1) {
dimension = i
}
stresses[i] <- nmdsOut$stress
dimensions[i] <- i
}
result = list("stresses" = stresses,"dimensions" = dimensions, "dim" = dimension)
return (result)
}
matrix <- data.frame(x1=Fitted,x2=XBestFitted)
corrMatrix <- cor(matrix)
rm(list=ls())
library(data.table)
library(data.table)
X <- fread("http://www-eio.upc.es/~jan/Data/bsg/YRI06.raw",data.table = FALSE)
X.Fam <- X[,1:6]
X.Gen <- X[,7:ncol(X)]
X <- as.matrix(X.Gen)
ibs.mean <- function(x,y) {
y <- mean(2 - abs(x - y),na.rm=TRUE)
return(y)
}
ibs.sd <- function(x,y) {
y <- sd(abs(x-y),na.rm=TRUE)
return(y)
}
ibs.mean(X[1,],X[2,])
ibs.sd(X[1,],X[2,])
ibs.mean(X[1,],X[1,])
ibs.sd(X[1,],X[1,])
n <- nrow(X)
n
Dmean <- matrix(NA,nrow=n,ncol=n)
Dsd <- matrix(NA,nrow=n,ncol=n)
for(i in 1:n) {
for(j in 1:n) {
Dmean[i,j] <- ibs.mean(X[i,],X[j,])
Dsd[i,j] <- ibs.sd(X[i,],X[j,])
}
}
Dmean[1:5,1:5]
Dsd[1:5,1:5]
ibs.m <- Dmean[lower.tri(Dmean)]
ibs.s <- Dsd[lower.tri(Dsd)]
plot(ibs.m,ibs.s,xlim=c(1,2),ylim=c(0,1),xlab="Mean",ylab="Standard deviation")
head(X.Fam)
Relationship <- matrix(NA,nrow=n,ncol=n)
is.po <- function(x,y) {
xchildy  <- x[1]==y[1] & (x[3]==y[2] | x[4]==y[2]) # x child of y
xparenty <- x[1]==y[1] & (x[2]==y[3] | x[2]==y[4]) # x parent of y
y <- xchildy | xparenty
return(y)
}
is.po(X.Fam[1,],X.Fam[2,])
is.po(X.Fam[1,],X.Fam[3,])
is.po(X.Fam[2,],X.Fam[3,])
is.po(X.Fam[2,],X.Fam[1,])
is.po(X.Fam[3,],X.Fam[1,])
is.po(X.Fam[3,],X.Fam[2,])
for(i in 1:n) {
for(j in 1:n) {
Relationship[i,j] <- is.po(X.Fam[i,],X.Fam[j,])
}
}
Relationship[1:5,1:5]
rel.pair <- Relationship[lower.tri(Relationship)]
colvec <- rep("blue",length(rel.pair))
colvec[rel.pair] <- "yellow"
plot(ibs.m,ibs.s,xlim=c(1,2),ylim=c(0,1),xlab="Mean",ylab="Standard deviation",
col=colvec)
legend(1.8,1,c("UN","PO"),col=c("blue","yellow"),pch=c(1,1))
X[1:5,1:5]
stats <- function(x,y) {
aux <- 2-abs(x-y) # number of shared alleles
n0 <- sum(aux==0,na.rm=TRUE)
n1 <- sum(aux==1,na.rm=TRUE)
n2 <- sum(aux==2,na.rm=TRUE)
n <- sum(!is.na(aux))
p0 <- n0/n
p1 <- n1/n
p2 <- n2/n
y <- c(p0,p1,p2)
return(y)
}
sum(stats(X[1,],X[2,]))
Mp0 <- matrix(NA,nrow=n,ncol=n)
Mp1 <- matrix(NA,nrow=n,ncol=n)
Mp2 <- matrix(NA,nrow=n,ncol=n)
for(i in 1:n) {
for(j in 1:n) {
statsofapair <- stats(X[i,],X[j,])
Mp0[i,j] <- statsofapair[1]
Mp1[i,j] <- statsofapair[2]
Mp2[i,j] <- statsofapair[3]
}
}
p0vec <- Mp0[lower.tri(Mp0)]
p2vec <- Mp2[lower.tri(Mp2)]
plot(jitter(p0vec,amount=.005),p2vec,asp=1,col=colvec,
xlab="% variants 0 shared alleles",
ylab="% variants 2 shared alleles")
legend("topright",c("UN","PO"),col=c("blue","yellow"),pch=c(1,1))
getwd()
runstring <- "plink --bfile YRI6 --genome --genome-full --out YRI6"
runstring
system(runstring)
Z <- read.table("YRI6.genome",header=TRUE)

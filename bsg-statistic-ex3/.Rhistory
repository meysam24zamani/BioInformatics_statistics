install.packages("Rcmdr")
install.packages("DAAG")
library("Rcmdr", lib.loc="~/R/win-library/3.4")
library("RcmdrMisc", lib.loc="~/R/win-library/3.4")
detach("package:Rcmdr", unload=TRUE)
detach("package:RcmdrMisc", unload=TRUE)
library("Rcmdr", lib.loc="~/R/win-library/3.4")
detach("package:Rcmdr", unload=TRUE)
install.packages("rlang")
library("Rcmdr", lib.loc="~/R/win-library/3.4")
detach("package:Rcmdr", unload=TRUE)
library("Rcmdr", lib.loc="~/R/win-library/3.4")
detach("package:Rcmdr", unload=TRUE)
library("Rcmdr", lib.loc="~/R/win-library/3.4")
install.packages("rlang")
library("Rcmdr", lib.loc="~/R/win-library/3.4")
library("Rcmdr", lib.loc="~/R/win-library/3.4")
library("RcmdrMisc", lib.loc="~/R/win-library/3.4")
library("Hmisc", lib.loc="~/R/win-library/3.4")
library("Rcmdr", lib.loc="~/R/win-library/3.4")
library("RcmdrMisc", lib.loc="~/R/win-library/3.4")
library("Rcmdr", lib.loc="~/R/win-library/3.4")
library("RcmdrMisc", lib.loc="~/R/win-library/3.4")
install.packages("rlang")
library("Rcmdr", lib.loc="~/R/win-library/3.4")
library("RcmdrMisc", lib.loc="~/R/win-library/3.4")
install.packages("rlang")
library("rlang", lib.loc="~/R/win-library/3.4")
library("Rcmdr", lib.loc="~/R/win-library/3.4")
library("car", lib.loc="~/R/win-library/3.4")
library("Rcmdr", lib.loc="~/R/win-library/3.4")
library("Rcmdr", lib.loc="~/R/win-library/3.4")
library("Rcmdr", lib.loc="~/R/win-library/3.4")
?rnorm
help.search(rnorm)
help.search("rnorm")
?rnorm
?rnorm
rnorm
rm(list = ls())
rm(list = ls())
ls()
load(url("http://www-eio.upc.es/~jan/data/bsg/Chromosome1 CHBPopSubset.rda")
dim(Ysub)
install.packages("genetics")
library(genetics)
Ysub[Ysub="NN"] <- NA
dim(Ysub) Ysub[1:5,5:1]
load(url("http://www-eio.upc.es/~jan/data/bsg/Chromosome1 CHBPopSubset.rda")
dim(Ysub) Ysub[1:5,5:1]
load(url("http://www-eio.upc.es/~jan/data/bsg/Chromosome1_CHBPopSubset.rda")
setwd("D:/Spain-Barcelona/UPC/4th Semester/BSG/Statistic-part")
rm(list = ls())
ls()
load(url("Chromosome1_CHBPopSubset.rda")
dim(Ysub) Ysub[1:5,5:1]
install.packages("Hardyweinberg")
y
yes
install.packages("Hardyweinberg")
install.packages("HardyWeinberg")
library(HardyWeinberg)
library(HardyWeinberg)
x <- c(CC=23,CT=48,TT=29)
x
results <- HWChisq(x,cc=0)
results.cc <- HWChisq(x)
results.exact <= HWExact(x)
results.exact <- HWExact(x)
y <- c(CC=0,CT=7,TT=93)
y
results <- HWChisq(y,cc=0)
results.cc <- HWChisq(y)
results <- HWChisq(y,cc=0)
results.cc <- HWChisq(y)
results.exact <- HWExact(y)
x <- c(CC=23,CT=48,TT=29)
x
results <- HWChisq(x,cc=0)
results.cc <- HWChisq(x)
results.exact <- HWExact(x)
y <- c(CC=0,CT=7,TT=93)
y
resultsy <- HWChisq(y,cc=0)
resultsy.cc <- HWChisq(y)
resultsy.exact <- HWExact(y)
z <- rbind(x,y)
z
HWTernaryPlot(z)
HWPerm
HWPerm(x)
HWPerm(y)
HWExact(x)
?HWPerm
HWPerm(x,nperm = 50000)
HWPerm(y)
?HWData
z <- HWData(nm=100)
z
HWTernaryPlot(z)
HWTernaryPlot(z.region = 7)
HWTernaryPlot(z.region=7)
HWTernaryPlot(z=7)
HWTernaryPlot(z=7)
HWTernaryPlot(z)
?HWChisq
out <- HWChisqStats(z)
attributes(out)
out
cbind(z,out)
sum(out<0.05,na.rm=TRUE)
?HWExact
set.seed(123)
set.seed(123)
z <- HWData(nm=100)
z
HWTernaryPlot(z)
?HWChisq
out <- HWChisqStats(z)
attributes(out)
out
cbind(z,out)
sum(out<0.05,na.rm=TRUE)
?HWExact
pval.exa <- HWExactStats(z)
sum(pval.exa = 0.05)
sum(pval.exa < 0.05)
chi <- HWChisqStats(z)
source('~/.active-rstudio-document', echo=TRUE)
hist(chi)
chi <- HWChisqStats(z)
hist(chi)
z <- HWData(nm=10000)
chi <- HWChisqStats(z)
hist(chi)
chi
hist(chi,breaks = 50)
knitr::opts_chunk$set(echo = TRUE)
download.file("http://www-eio.upc.es/~jan/data/bsg/CHDCHR22RAW.raw","chinese.raw")
#setwd("~/")
wholedataset <- read.table("chinese.raw", header = TRUE)
IDSex <- wholedataset[,c(2,5)]
dataset <- wholedataset[,c(7:ncol(wholedataset))]
IDSex$SEX[IDSex$SEX==1]<-"M"
IDSex$SEX[IDSex$SEX==2]<-"F"
dataset[dataset==0]<-"AA"
dataset[dataset==0]<-"AA"
dataset[dataset==1]<-"AB"
dataset[dataset==0]<-"AA"
dataset[dataset==1]<-"AB"
dataset[dataset==2]<-"BB"
numVariants <- ncol(dataset)
numberRows <- nrow(dataset)
numberColumns <- ncol(dataset)
dataset[dataset!="AA" & dataset!="AB" & dataset!="BB"] <- NA
percentageMissing <- 100*sum(is.na(dataset))/(numberRows*numberColumns)
numberOfMales=length(IDSex$SEX[IDSex$SEX=="M"])
numberOfFemales=length(IDSex$SEX[IDSex$SEX=="F"])
numVariants
percentageMissing
numberOfMales
numberOfFemales
numVariants
percentageMissing
numberOfMales
numberOfFemales
install.packages("genetics")
library(genetics)
library(genetics)
is_monomorphic <- function(x) {
genotypeOfX <- genotype(x,sep="")
genotypeInfo <- summary(genotypeOfX)
numberOfAlleles <- length(genotypeInfo$allele.names)
return(numberOfAlleles > 1)
}
booleanArrayNoMonomorphic <- apply(dataset,2,is_monomorphic)
booleanArrayNoMonomorphic <- apply(dataset,2,is_monomorphic)
datasetNoMonomorphic <- dataset[booleanArrayNoMonomorphic=="TRUE"]
datasetNoMonomorphic <- dataset[booleanArrayNoMonomorphic=="TRUE"]
numberNoMonomorphic <- ncol(datasetNoMonomorphic)
remainingVariants <- numberNoMonomorphic
numberMonomorphic <- numVariants - remainingVariants
percentageMonomorphic <- 100*numberMonomorphic/numVariants
percentageMonomorphic
remainingVariants
genotypeOf <- genotype(datasetNoMonomorphic$rs3729688_G,sep="")
genotypeOfInfo <- summary(genotypeOf)
genotypeCounts <- genotypeOfInfo$genotype.freq[,1]
#also with genotypeCounts <- table(datasetNoMonomorphic$rs3729688_G)
alleleCounts <- genotypeOfInfo$allele.freq[,1]
minAlleleCount <- min(alleleCounts)
alleleFrequency <- genotypeOfInfo$allele.freq[,2]
minAlleleFrequency <- min(alleleFrequency)
minAlleleFrequency[minAlleleFrequency==1] <- 0
minAlleleFrequency
maf <- function(x){
x <- genotype(x,sep="")
out <- summary(x)
af1 <- min(out$allele.freq[,2],na.rm=TRUE)
af1[af1==1] <- 0
return(af1)
}
mafOfAll <- apply(datasetNoMonomorphic,2,maf)
mafOfAll
hist(mafOfAll)
numberOfMarkersBelow005 <- length(mafOfAll[mafOfAll<0.05])
percentageOfMarkersBelow005 <-  100 * numberOfMarkersBelow005 / numberNoMonomorphic
numberOfMarkersBelow001 <- length(mafOfAll[mafOfAll<0.01])
percentageOfMarkersBelow001 <-  100 * numberOfMarkersBelow001 / numberNoMonomorphic
percentageOfMarkersBelow005
percentageOfMarkersBelow001
datasetNoMonomorphicMales <- datasetNoMonomorphic[IDSex$SEX=="M",]
datasetNoMonomorphicFemales <- datasetNoMonomorphic[IDSex$SEX=="F",]
mafOfMales <- apply(datasetNoMonomorphicMales,2,maf)
mafOfMales <- apply(datasetNoMonomorphicMales,2,maf)
mafOfFemales <- apply(datasetNoMonomorphicFemales,2,maf)
plot(mafOfMales,mafOfFemales,xlab="MAF of Males",ylab="MAF of Females")
correlationCoefficient <- cor(mafOfMales,mafOfFemales)
correlationCoefficient
# Function to get the observed heterozygosity of each marker.
obs_hetero <- function(x) {
genotypeOfX <- genotype(x,sep="")
genotypeInfo <- summary(genotypeOfX)
genotypeFrequency <- genotypeInfo$genotype.freq[,2]
return(genotypeFrequency[2])
}
obs_hetero <- function(x) {
genotypeOfX <- genotype(x,sep="")
genotypeInfo <- summary(genotypeOfX)
genotypeFrequency <- genotypeInfo$genotype.freq[,2]
return(genotypeFrequency[2])
}
observedHeterozygosity <- apply(datasetNoMonomorphic,2,obs_hetero)
hist(observedHeterozygosity)
range(observedHeterozygosity)
exp_hetero <- function(x) {
genotypeOfX <- genotype(x,sep="")
genotypeInfo <- summary(genotypeOfX)
k <- length(genotypeInfo$allele.names) #K is the number of allele
sum = 0
for(i in 1:k) {
sum <- sum + genotypeInfo$allele.freq[,2][i] * genotypeInfo$allele.freq[,2][i]
}
return(1 - sum)
}
expectedHeterozygosity <- apply(datasetNoMonomorphic,2,exp_hetero)
hist(expectedHeterozygosity)
range(expectedHeterozygosity)
mean(expectedHeterozygosity)
hist(mafOfAll)
library(genetics)
library(genetics)
library(HardyWeinberg)
library(HardyWeinberg)
library(LDheatmap)
library(LDheatmap)
load("C:/Data/CHBChr2-2000.rda")
setwd("~/")
setwd("D:/Spain-Barcelona/UPC/4th Semester/BSG/Statistic-part/bsg-statistic-ex3")
rm(list=ls())
#download.file("www-eio.upc.es/~jan/data/bsg/CHBChr2-2000.rda","chinese.raw")
load(url("www-eio.upc.es/~jan/data/bsg/CHBChr2-2000.rda"))
www-eio.upc.es/~jan/data/bsg/CHBChr2-2000.rda
#download.file("www-eio.upc.es/~jan/data/bsg/CHBChr2-2000.rda","chinese.raw")
load(url("www-eio.upc.es/~jan/data/bsg/CHBChr2-2000.rda"))
download.file("www-eio.upc.es/~jan/data/bsg/CHBChr2-2000.rda","CHBChr2-2000.raw")
download.file("www-eio.upc.es/~jan/data/bsg/CHBChr2-2000.rda","CHBChr2-2000.raw")
setwd("D:/Spain-Barcelona/UPC/4th Semester/BSG/Statistic-part/bsg-statistic-ex3")
library(genetics)
library(HardyWeinberg)
library(LDheatmap)
#download.file("www-eio.upc.es/~jan/data/bsg/CHBChr2-2000.rda","CHBChr2-2000.raw")
load(url("www-eio.upc.es/~jan/data/bsg/CHBChr2-2000.rda"))
#download.file("http://www-eio.upc.es/~jan/data/bsg/CHBChr2-2000.rda","CHBChr2-2000.raw")
load(url("http://www-eio.upc.es/~jan/data/bsg/CHBChr2-2000.rda"))
ls()
Alleles
class(X)
X[1:10,1:10]
X <- t(X)
table(X[,1])
table(X[6,])
X <- t(X)
dim(X)
dim(Alleles)
class(Alleles)
dim(Alleles)
SNP12 <- X[,12]
SNP13 <- X[,13]
SNP1000 <- X[,1000]
SNP1000 <- X[,1000]
library(genetics)
library(HardyWeinberg)
library(LDheatmap)
library(LDheatmap)
install.packages("LDheatmap")
library(LDheatmap)
library(LDheatmap)
rm(list=ls())
#download.file("http://www-eio.upc.es/~jan/data/bsg/CHBChr2-2000.rda","CHBChr2-2000.raw")
load(url("http://www-eio.upc.es/~jan/data/bsg/CHBChr2-2000.rda"))
library(genetics)
library(HardyWeinberg)
library(LDheatmap)
rm(list=ls())
#download.file("http://www-eio.upc.es/~jan/data/bsg/CHBChr2-2000.rda","CHBChr2-2000.raw")
load(url("http://www-eio.upc.es/~jan/data/bsg/CHBChr2-2000.rda"))
ls()
Alleles
class(X)
X[1:10,1:10]
table(X[,1])
table(X[6,])
X <- t(X)
dim(X)
class(Alleles)
dim(Alleles)
SNP12 <- X[,12]
SNP13 <- X[,13]
SNP1000 <- X[,1000]
table(SNP12)
table(SNP13)
table(SNP13,useNA="always")
SNP12g <- genotype(SNP12,sep="")
SNP13g <- genotype(SNP13,sep="")
SNP1000g <- genotype(SNP1000,sep="")
summary(SNP12g)
summary(SNP13g)
summary(SNP1000g)
res <- LD(SNP12g,SNP13g)
table(SNP12,SNP1000)
res <- LD(SNP12g,SNP1000g)
res
attributes(res)
chisq <- res$"X^2"
chisq
pchisq(chisq,df=1,lower.tail=FALSE)
n <- nrow(X)
n <- nrow(X)
n
nmis <- function(x) {
y <- sum(is.na(x))
return(y)
}
table(X[,1],useNA="always")
nmis(X[,1])
dim(X)
nmissingpersnp <- apply(X,2,nmis)
nmissingpersnp
X <- X[,nmissingpersnp==0]
dim(X)
sum(is.na(X))
X100 <- X[,1:100]
RES <- data.frame(genotype(X100[,1],sep=""))
RES
for(i in 2:ncol(X100)) {
snp <- genotype(X100[,i],sep="")
RES <- cbind(RES,snp)
}
dim(RES)
top(RES)
head(RES)
output <- LD(RES)
attributes(output)
Dm <- output$D
Dp <- output$"D'"
R2 <- output$"R^2"
X2 <- output$"X^2"
Dm[1:10,1:10]
Dm <- Dm[upper.tri(Dm)]
Dp <- Dp[upper.tri(Dp)]
R2 <- R2[upper.tri(R2)]
X2 <- X2[upper.tri(X2)]
Dm
class(Dm)
Dm <- Dm[upper.tri(Dm)]
class(Dm)
Dp <- Dp[upper.tri(Dp)]
R2 <- R2[upper.tri(R2)]
X2 <- X2[upper.tri(X2)]
Dm
pairs(cbind(Dm,Dp,R2,X2))
library(genetics)
library(HardyWeinberg)
library(LDheatmap)
rm(list=ls())
#download.file("http://www-eio.upc.es/~jan/data/bsg/CHBChr2-2000.rda","CHBChr2-2000.raw")
load(url("http://www-eio.upc.es/~jan/data/bsg/CHBChr2-2000.rda"))
ls()
Alleles
class(X)
X[1:10,1:10]
table(X[,1])
table(X[6,])
X <- t(X)
dim(X)
class(Alleles)
dim(Alleles)
SNP12 <- X[,12]
SNP13 <- X[,13]
SNP1000 <- X[,1000]
table(SNP12)
table(SNP13)
table(SNP13,useNA="always")
SNP12g <- genotype(SNP12,sep="")
SNP13g <- genotype(SNP13,sep="")
SNP1000g <- genotype(SNP1000,sep="")
summary(SNP12g)
summary(SNP13g)
summary(SNP1000g)
res <- LD(SNP12g,SNP13g)
table(SNP12,SNP1000)
res <- LD(SNP12g,SNP1000g)
res
attributes(res)
chisq <- res$"X^2"
chisq
pchisq(chisq,df=1,lower.tail=FALSE)
n <- nrow(X)
n
nmis <- function(x) {
y <- sum(is.na(x))
return(y)
}
table(X[,1],useNA="always")
nmis(X[,1])
dim(X)
nmissingpersnp <- apply(X,2,nmis)
nmissingpersnp
X <- X[,nmissingpersnp==0]
dim(X)
sum(is.na(X))
X100 <- X[,1:100]
RES <- data.frame(genotype(X100[,1],sep=""))
RES
for(i in 2:ncol(X100)) {
snp <- genotype(X100[,i],sep="")
RES <- cbind(RES,snp)
}
dim(RES)
head(RES)
output <- LD(RES)
attributes(output)
Dm <- output$D
Dp <- output$"D'"
R2 <- output$"R^2"
X2 <- output$"X^2"
Dm[1:10,1:10]
class(Dm)
Dm <- Dm[upper.tri(Dm)]
class(Dm)
Dp <- Dp[upper.tri(Dp)]
R2 <- R2[upper.tri(R2)]
X2 <- X2[upper.tri(X2)]
Dm
pairs(cbind(Dm,Dp,R2,X2))
?LDheatmap
rgb.palette <- colorRampPalette(rev(c("blue", "orange", "red")), space = "rgb")
LDheatmap(RES,LDmeasure="D'",color=rgb.palette(18))
LDheatmap(RES,LDmeasure="r",color=rgb.palette(18))

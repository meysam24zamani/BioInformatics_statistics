data <- read.delim("APOE.dat", header = TRUE, row.names = 1, sep=" ")
nrows <- nrow(data)
nrows
ncols <- ncol(data)
ncols
#Percentage of missing
sum(is.na(data))/(nrows*ncols)*100
(nHaploPossible <- 2^ncols)
#install.packages("haplo.stats")
library(haplo.stats)
#install.packages("haplo.stats")
library(haplo.stats)
Geno <- cbind(substr(data[,1],1,1),substr(data[,1],2,2))
for(i in 2:ncols) {
Geno <- cbind(Geno,substr(data[,i],1,1),substr(data[,i],2,2))
}
for(i in 2:ncols) {
Geno <- cbind(Geno,substr(data[,i],1,1),substr(data[,i],2,2))
}
Haplo.Res <- haplo.em(Geno,locus.label=colnames(data),control=haplo.em.control(min.posterior=0.001))
Haplo.Res
Haplo.Res <- haplo.em(Geno,locus.label=colnames(data),control=haplo.em.control(min.posterior=0.001))
View(data)
isAmbiguousOrUncertain <- function(x){
# If some is NA, the haplotypic is uncertain
isUncertain <- any(is.na(x))
# If it is double-side heterozygous, the haplotypic is ambiguous
isAmbiguous <- sum( sapply(x, function(y) substr(y,1,1)!=substr(y,2,2)) )> 1
return(isUncertain || isAmbiguous)
}
Y.isAmbiguousOrUncertain <- apply(Y, 1, isAmbiguousOrUncertain)
unique(Y[,'rs374311741'])
